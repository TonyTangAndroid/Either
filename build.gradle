plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'
group = 'com.spencerwi'
archivesBaseName = 'Either.java'
version = '2.1.1'

repositories {
	mavenCentral()
}

dependencies {
	testCompile group: 'org.assertj', name:'assertj-core', version:'3.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
}

test {
	useJUnitPlatform()
}

task javadocJar(type: Jar){
	from javadoc
    classifier = 'javadoc'
}

task sourcesJar(type: Jar){
    from sourceSets.main.allJava
	classifier = 'sources'
}

def customizePom(pom, gradleProject) {
	pom.withXml { 
        def root = asNode()

		// modify POM and add optional flag where needed
		root.dependencies.'*'.findAll {
			ext.artifactId = it.artifactId.text()
				ext.fulldep = it.groupId.text() + ':' + it.artifactId.text() + ':' + it.version.text()

				if (ext.artifactId in project.optionalDeps || ext.fulldep in project.optionalDeps) {
					def xmlOptional = it.optional[0]
						if (!xmlOptional) {
							xmlOptional = it.appendNode('optional')
						}
					xmlOptional.value = 'true'
				}
		}

		// modify POM and set provided scope where needed
		root.dependencies.'*'.findAll {
			def d = it
				project.configurations.findByName("provided").allDependencies.find { dep ->
					dep.name == it.artifactId.text()
				}.each() {
					d.scope*.value = 'provided'
				}
		}

		// add all items necessary for maven central publication
		root.children().last() + {
			resolveStrategy = Closure.DELEGATE_FIRST

			name 'Either.java'
			packaging 'jar'
			description "A right-biased implementation of 'Either a b' for Java, using Java 8 for mapping/folding and type inference."
			url "http://github.com/spencerwi/Either.java"

			scm {
				url 'scm:git@github.com:spencerwi/Either.java.git'
					connection 'scm:git@github.com:spencerwi/Either.java.git'
					developerConnection 'scm:git@github.com:spencerwi/Either.java.git'
			}

			licenses {
				license {
					name 'The MIT License (MIT)'
					url 'https://raw.githubusercontent.com/spencerwi/Either.java/master/LICENSE'
					distribution 'repo'
				}
			}

			developers {
				developer {
					id 'spencerwi'
					name 'Spencer Williams'
				}
			}
			issueManagement {
				system 'GitHub'
				url 'https://github.com/spencerwi/Either.java/issues'
			}
		}
	}
}

if (!(project.hasProperty('isTravis'))){
    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = 'Either.java'
                from components.java
                artifact sourcesJar
                artifact javadocJar

                customizePom(pom, project)
            }
        }
        repositories {
            maven {
                def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
                def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
                url = version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl

                credentials {
                    username sonatypeUsername
                    password sonatypePassword
                }
            }
        }
    }
    signing {
        sign publishing.publications.mavenJava
    }
}
